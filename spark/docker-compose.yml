version: '3'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 12021:9870
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    healthcheck:
      interval: 5s
      retries: 100
    volumes:
      - hadoop_namenode:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      namenode:
        condition: service_healthy
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    healthcheck:
      interval: 5s
      retries: 100
    volumes:
      - hadoop_datanode:/hadoop/dfs/data

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    depends_on:
      - namenode
      - datanode
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020

  spark-worker-1:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - "SPARK_MASTER=spark://spark-master:7077"

  spark-worker-2:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - "SPARK_MASTER=spark://spark-master:7077"

  py-spark:
    build: ./app
    depends_on:
      - spark-master
    environment:
      - ENABLE_INIT_DAEMON=false
      - "SPARK_MASTER=spark://spark-master:7077"
    volumes:
      - ./app/src:/app/src

volumes:
  hadoop_namenode:
  hadoop_datanode:

networks:
  default:
    external:
      name: kafka-cc-spark_kafka